# signals.py - Signal description
# ----------------------------------------------------------------
# WARNING: Do not modify this file. It is automatically generated
#          from signal files. Any modification will be lost the
#          next time the file is generated.

"""
Signal description file generated from:
    test/tc_back.rb
Generated by:
    test/tc_back.rb
"""

import ogre

LINX_SIGSELECT = int
class testenum:
    ENUM1 = 0
    ENUM2 = 1
    ENUM3 = 2

# ----
class struct_type(ogre.Struct):
    """Signal description for struct struct_type"""

    ATTR_LIST = [
        'a',
        'b',
    ]
    
    def __init__(self):
        ogre.Struct.__init__(self)
        self.a = 0
        self.b = 0

    def serialize(self, writer, tag=None):
        writer.align(4)
        writer.writeS32(self.a)
        writer.writeS32(self.b)
        writer.align(4)

    def unserialize(self, reader, tag=None):
        reader.align(4)
        self.a = reader.readS32()
        self.b = reader.readS32()
        reader.align(4)

# ----
class OUTPUT_SIG(ogre.Signal):
    """Signal description for signal OUTPUT_SIG"""

    SIGNO = 13121

    ATTR_LIST = [
        'sig_no',
        'output',
        'array_val',
        'array_size',
        'byte_val',
        'enum_val',
        'struct_val',
    ]
    
    def __init__(self):
        ogre.Signal.__init__(self, self.SIGNO)
        self.output = 0
        self.array_val = ogre.Array([ 0 for i in range(10) ])
        self.array_size = 0
        self.byte_val = 0
        self.enum_val = 0
        self.struct_val = struct_type()

    def serialize(self, writer, tag=None):
        writer.align(4)
        writer.writeS32(self.output)
        writer.int_array(self.array_val, 10, writer.writeS32)
        writer.writeS32(self.array_size)
        writer.writeU8(self.byte_val)
        writer.writeS32(self.enum_val)
        self.struct_val.serialize(writer)
        writer.align(4)

    def unserialize(self, reader, tag=None):
        reader.align(4)
        self.output = reader.readS32()
        self.array_val = reader.int_array(10, 10, reader.readS32)
        self.array_size = reader.readS32()
        self.byte_val = reader.readU8()
        self.enum_val = reader.readS32()
        self.struct_val.unserialize(reader)
        reader.align(4)

# ----
ogre.Signal.register(OUTPUT_SIG.SIGNO, OUTPUT_SIG)

# End of file
